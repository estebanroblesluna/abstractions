<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:facebook="http://www.springframework.org/schema/social/facebook"
       xmlns:twitter="http://www.springframework.org/schema/social/twitter"
       xmlns:social="http://www.springframework.org/schema/social"
       xmlns:linkedin="http://www.springframework.org/schema/social/linkedin"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/social/facebook http://www.springframework.org/schema/social/spring-social-facebook.xsd
                        http://www.springframework.org/schema/social/linkedin http://www.springframework.org/schema/social/spring-social-linkedin.xsd
                        http://www.springframework.org/schema/social/twitter http://www.springframework.org/schema/social/spring-social-twitter.xsd
                        http://www.springframework.org/schema/social http://www.springframework.org/schema/social/spring-social.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
                        http://www.springframework.org/schema/mvc
        				http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

  <context:property-placeholder location="classpath:application.properties" ignore-unresolvable="true" />
  <import resource="classpath:common.xml" />
  <import resource="classpath:datasource.xml" />
  <import resource="classpath:hibernate.xml" />
  <import resource="classpath:applicationContext.xml" />
  <import resource="rest.xml" />
  <import resource="dust.xml" />
  
  <mvc:annotation-driven />
  
  <context:component-scan base-package="com.abstractions.service.rest" />

  
  <bean id="applicationService" class="com.abstractions.service.ApplicationService">
    <constructor-arg index="0" ref="repository" />
    <constructor-arg index="1" ref="teamService" />
  </bean>

  <bean id="serverService" class="com.abstractions.service.ServerService">
    <constructor-arg index="0" ref="repository" />
    <constructor-arg index="1" ref="serverGroupService" />
  </bean>

  <bean id="propertiesService" class="com.abstractions.service.PropertiesService">
    <constructor-arg index="0" ref="repository" />
    <constructor-arg index="1" ref="applicationService" />
  </bean>

  <bean id="flowService" class="com.abstractions.service.FlowService">
    <constructor-arg index="0" ref="repository" />
    <constructor-arg index="1" ref="applicationService" />
    <constructor-arg index="2" ref="namesMapping" />
    <constructor-arg index="3" ref="contextHolder" />
  </bean>
  
  <bean id="libraryService" class="com.abstractions.service.core.LibraryService">
    <constructor-arg index="0" ref="repository" />
  </bean>
  
  <bean class="com.abstractions.service.core.MappingInitializer" init-method="initializeMapping">
    <property name="mapping" ref="namesMapping" />
    <property name="libraryService" ref="libraryService" />
  </bean>

  <bean class="com.abstractions.utils.ApplicationContextHolder">
  </bean>

  <bean id="snapshotService" class="com.abstractions.service.SnapshotService">
    <constructor-arg index="0" ref="repository" />
    <constructor-arg index="1" ref="applicationService" />
    <constructor-arg index="2" ref="publicResourceService" />
    <constructor-arg index="3" ref="dustTemplateFileProcessor" />
    <constructor-arg index="4" ref="resourceBasedDustTemplateCompiler" />
    <constructor-arg index="5" value="./files" />
  </bean>

  <bean id="teamService" class="com.abstractions.service.TeamService">
    <constructor-arg index="0" ref="repository" />
  </bean>

  <bean id="serverGroupService" class="com.abstractions.service.ServerGroupService">
    <constructor-arg index="0" ref="repository" />
    <constructor-arg index="1" ref="teamService" />
  </bean>

  <bean id="userService" class="com.abstractions.service.UserService">
    <constructor-arg index="0" ref="repository" />
  </bean>

  <bean id="deploymentService" class="com.abstractions.service.DeploymentService">
    <constructor-arg index="0" ref="repository" />
    <constructor-arg index="1" ref="snapshotService" />
    <constructor-arg index="2" ref="userService" />
    <constructor-arg index="3" ref="serverService" />
  </bean>

  <bean id="publicResourceService" class="com.abstractions.service.core.DatabaseResourceService">
    <constructor-arg index="0" ref="repository" />
    <constructor-arg index="1" value="P" />
  </bean>
  
  <bean id="privateResourceService" class="com.abstractions.service.core.DatabaseResourceService">
    <constructor-arg index="0" ref="repository" />
    <constructor-arg index="1" value="R" />
  </bean>
  
  <bean id="elementDefinitionService" class="com.abstractions.service.ElementDefinitionService">
    <constructor-arg index="0" ref="repository" />
    <constructor-arg index="1" ref="libraryService" />
  </bean>
  
  <bean id="iconService" class="com.abstractions.service.IconService">
    <constructor-arg index="0" ref="repository" />
  </bean>
   
 <bean id="multipartResolver"  
  class="org.springframework.web.multipart.commons.CommonsMultipartResolver" /> 
    
 <bean class="org.spring.log.LoggingHandlerExceptionResolver"/>
 
 <bean id="messageSource"
	class="org.springframework.context.support.ResourceBundleMessageSource">
	<property name="basenames">
	    <list>
		<value>mymessages</value>
	    </list>
	</property>
  </bean>
  
  <!-- Spring Social -->
  <bean id="connectionFactoryLocator" 
        class="org.springframework.social.connect.support.ConnectionFactoryRegistry">
      <property name="connectionFactories">
          <list>
              <bean class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
                  <constructor-arg value="496671850440097" /> <!-- clientId -->
                  <constructor-arg value="059d820acb20cab2e783654cacc70e1a" />	<!-- clientSecret -->			
              </bean>
              <bean class="org.springframework.social.twitter.connect.TwitterConnectionFactory">
                <constructor-arg value="iFIDlvm64vz0pJLmSwVkA" /> <!-- consumerKey -->
                <constructor-arg value="qdLASAxOqcWO7GrTJk4m0RxJlkokiaByjvxwVpXOC8" /> <!-- consumerSecret -->		
            </bean>
          </list>
      </property>
  </bean>

  <bean id="usersConnectionRepository" 
        class="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository">
      <constructor-arg ref="dataSource" />
      <constructor-arg ref="connectionFactoryLocator" />
      <constructor-arg ref="textEncryptor" />
      <property name="connectionSignUp" ref="userConnectionSignUp" />
  </bean>
  
  <bean id="userConnectionSignUp" class="com.abstractions.web.UserConnectionSignUp" >
     <constructor-arg ref="usersConnectionRepository" />
  </bean>

  <bean id="connectionRepository" factory-method="createConnectionRepository" 
        factory-bean="usersConnectionRepository" scope="request">
      <constructor-arg value="#{request.userPrincipal.name}" />
      <aop:scoped-proxy proxy-target-class="false" />
  </bean>
  
  
  <bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors" 
            factory-method="noOpText" />
 
  
  <bean id="signInAdapter"  
  class="com.abstractions.web.SignInAdapterImpl" /> 
  
  <bean class="org.springframework.social.connect.web.ProviderSignInController"> 
    <!-- relies on by-type autowiring for the constructor-args -->    
  </bean>
  
   <bean id="authProvider" class="com.abstractions.service.CustomJdbcUserDetailsManager">
        <property name="dataSource" ref="dataSource"/>
   </bean>
   
   <bean id="registerConfirmationEmail" class="com.abstractions.web.EmailService" /> 
</beans>
