<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Lifia</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="shortcut icon" href="../../imagenes/lifiaicon.ico" >
<style type="text/css">
<!--
@import url("../estilos_lifia.css");
body {
	background-color: #bec2d1;
	margin-left: 0px;
	margin-top: 5px;
	margin-right: 0px;
	margin-bottom: 0px;
	background-image: url();
}
a:link {
	color: #255282;
	text-decoration: none;
}
a:visited {
	text-decoration: none;
	color: #255282;
}
a:hover {
	text-decoration: none;
	color: #FF9933;
}
a:active {
	text-decoration: none;
	color: #FF9933;
}
.Estilo4 {color: #666666}
.Estilo8 {color: #1EA173}
.Estilo9 {color: #333399}
-->
</style>
</head>

<body>
<table width="830" border="0" align="center" cellpadding="0" cellspacing="0" background="../imagenes/line_830.gif">
  <!--DWLayoutTable-->
  <tr>
    <td width="30" rowspan="8" valign="top"><img src="../imagenes/spacer_izq2.gif" width="30" height="615"></td>
    <td colspan="4" valign="top"><table width="780" height="114" border="0" cellpadding="0" cellspacing="0">
        <!--DWLayoutTable-->
        <tr>
          <td width="780" height="170" valign="top"><img src="../imagenes/top_difusion.gif" width="780" height="172" border="0" usemap="#Map"></td>
        </tr>
    </table></td>
  <td width="20" rowspan="8" valign="top"><img src="../imagenes/spacer_der2.gif" width="20" height="485"></td>
  </tr>
  <tr>
    <td width="247" rowspan="5" valign="top"><table width="247" border="0" cellpadding="0" cellspacing="0">
        <!--DWLayoutTable-->
        <tr>
          <td height="19" colspan="3" valign="top"><img src="../imagenes/spacer_vert_19.gif" width="10" height="19"></td>
        </tr>
        <tr>
          <td width="41" rowspan="7" valign="top"><!--DWLayoutEmptyCell-->&nbsp;</td>
          <td height="19" colspan="2" valign="top" nowrap class="menu_izq"><a href="../index.htm" target="_self">Bienvenida</a></td>
        </tr>
        <tr>
          <td height="19" colspan="2" valign="top" nowrap class="menu_izq"><a href="../about_us.htm" target="_self">Sobre nosotros</a> </td>
        </tr>
        <tr>
          <td height="19" colspan="2" valign="top" nowrap class="menu_izq"><a href="../research.htm">Investigaci&oacute;n</a> </td>
        </tr>
        <tr>
          <td height="19" colspan="2" valign="top" nowrap><span class="menu_izq"> <a href="../publications.htm" target="_self">Publicaciones </a></span> &#13;</td>
        </tr>
        <tr>
          <td height="19" colspan="2" valign="top" nowrap class="menu_izq"><a href="../technology.htm" target="_self">Transferencia de tec. &amp; servicios </a>&#13;</td>
        </tr>
        <tr>
          <td height="19" colspan="2" valign="top" class="menu_izq"><span class="menu_izq Estilo8"> <a href="../capabilities.htm">Capacidades &#13;</a><strong> <a href="capabilities.htm">&#13;&#13;</a></strong></span> &#13;</td>
        </tr>
        <tr>
          <td height="19" colspan="2" valign="top"><a href="../difusion.htm" class="menu_izq"><strong>Difusi&oacute;n</strong></a></td>
        </tr>
        <tr>
          <td height="57">&nbsp;</td>
          <td width="84">&nbsp;</td>
          <td width="122">&nbsp;</td>
        </tr>
        <tr>
          <td height="84" colspan="3" valign="top"><img src="../imagenes/spacer_vert_84.gif" width="10" height="84"></td>
        </tr>
        <tr>
          <td height="16" colspan="2" valign="top"><div align="center" class="menu_negrita Estilo4"><a href="../sitemap.htm" target="_self">mapa del sitio</a> </div></td>
              <td rowspan="5" valign="top"><!--DWLayoutEmptyCell-->&nbsp;</td>
        </tr>
        <tr>
          <td height="16" colspan="2" valign="top"><div align="center" class="menu_negrita"><a href="../staff.htm" target="_self">staff</a></div></td>
        </tr>
        <tr>
          <td height="16" colspan="2" valign="top"><div align="center" class="menu_negrita Estilo4"><a href="../contact.htm" target="_self">contacto</a></div></td>
        </tr>
        <tr>
          <td height="16" colspan="2" valign="top"><div align="center" class="menu_negrita Estilo4"><a href="../../en/index.htm" target="_self">english version</a> </div></td>
        </tr>
        <tr>
          <td height="16"></td>
          <td></td>
        </tr>
		        <tr>
		          <td>&nbsp;</td>
                  <td>&nbsp;</td>
                  <td>&nbsp;</td>
        </tr>
		
                </table></td>
    <td width="40"></td>
    <td valign="top"><!--DWLayoutEmptyCell-->&nbsp;</td>
        <td width="107"></td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td valign="top" class="titulo_principal_cap Estilo9"><span class="titulo_principal_gen">EJB 3 Persistence API </span><br></td>
    <td></td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td valign="top" class="titulo_secundario"> (por Santiago Urrizola)  - 18/Julio/2007 - <a href="20070718.htm"><strong>Permalink</strong></a> </td>
    <td></td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td valign="top" class="parrafo_normal"><p><strong> <br>
    </strong>La EJB 3 persistense API surge por dos motivos fundamentales, el reemplazo de una tecnolog&iacute;a ya obsoleta y &uacute;nico est&aacute;ndar de persistencia de J2EE (nunca aceptado por la comunidad): los &ldquo;Entity Beans&rdquo;. Y adem&aacute;s como reconocimiento de que los mapeadores objeto relacional son componentes funcionalmente apropiados en la mayor&iacute;a de los casos y est&aacute;n aceptados como &ldquo;est&aacute;ndares&rdquo; para la industria.<br>
      <br>
     La mayor diferencia de esta nueva especificaci&oacute;n con las anteriores, es que se apoya en otras tecnolog&iacute;as. Los mapeadores brindan la transparencia del soporte de persistencia (independencia del motor de base de datos). Se puede desarrollar una aplicaci&oacute;n entera persistiendo en una base de datos, y luego cambiar la base de datos en el paso a producci&oacute;n (algo muy conveniente en muchos casos) por medio de algunas modificaciones en los archivos de configuraci&oacute;n. Por ejemplo se puede desarrollar una aplicaci&oacute;n sobre MySQL y luego pasar a producci&oacute;n en ambientes DB2 para AS400 (lo cual ser&iacute;a imposible de replicar en ambientes de desarrollo, testing, QA o laboratorio).<br>
      <br>
    EJB3 Persistense API provee adem&aacute;s independencia del mecanismo de persistencia utilizado. La persisntencia es delegada a otros frameworks como los mapeadores (Hibernate, Toplink, etc.) pero la aplicaci&oacute;n es independiente del framework utilizado, logrando as&iacute; una doble independencia: de la base de datos y del mecanismo de persistencia, esto hace que se pueda no tener ni siquiera una l&iacute;nea de c&oacute;digo no est&aacute;ndar (como clases de Hibernate). Esto tiene como principal ventaja una mayor portabilidad entre servidores, ya que en algunos casos la instalaci&oacute;n de nuevas componentes (como un mapeador) en un servidor de producci&oacute;n es bastante restringida. Un ejemplo son los ambientes bancarios, y como EJB3 debe estar soportado por todos los servidores, esto deja de ser un problema. Es tarea del implementador del servidor (Oracle, IBM, BEA, JBOSS) brindar para cada uno de sus servidores la &ldquo;mejor&rdquo; implementaci&oacute;n para su contenedor. Por ejemplo, JBOSS implementa el mecanismo con Hibernate.<br>
      <br>
      Otro gran problema con las versiones anteriores de la especificaci&oacute;n (1.0 y 2.1) es la imposibilidad de realizar pruebas de unidad fuera de los servidores. No se pod&iacute;a correr un Junit dentro de un EJB si este no se encontraba corriendo en un appServer. Esto obligaba a que para correr cualquier prueba, por simple que fuera, se deb&iacute;a instalar toda la aplicaci&oacute;n en el servidor. Generado en algunos casos, importantes retrasos. Ahora, la versi&oacute;n 3 provee soporte para ejecutar EJBs en ambientes no controlados por el contenedor (como pruebas con Junit o aplicaciones desktop) de dos formas. Por medio de bootstraping se puede &ldquo;cargar&rdquo; todo el ambiente de EJB en un TestCase permitiendo ejecutar cualquier porci&oacute;n de l&oacute;gica tal cual como si estuviese corriendo en un servidor. Y adem&aacute;s, todo lo relacionado con EJB3 Persistence API est&aacute; disponible en ambientes J2SE.<br>
      <br>
    Entre los objetivos buscados y conseguidos por esta especificaci&oacute;n se pueden encontrar el simplicifcar y &ldquo;alivianar&rdquo; la complejidad en la programaci&oacute;n de objetos persistentes (Entity Beans), que en versiones anteriores eran objetos realmente pesados (para el servidor), muy ineficientes, y complejos de programar. Un entity requer&iacute;a de 3 clases escritas por el programador y el servidor generaba (dependiendo del fabricante) entre 7 y 9 clases en runtime (llegamos a ver que contenedores de IBM generaban hasta 9 clases).<br>
      <br>
      Al igual que toda la especificaci&oacute;n de EJB3, persistence API hace un uso extensivo de Annotations, lo cual genera gran controversia al ir en contra de lo que en la industria est&aacute; abiertamente aceptado que es el uso declarativo en XML (motivado principalmente por SPRING).<br>
      <br>
      La discusi&oacute;n est&aacute; planteada ahora sobre la aceptaci&oacute;n o no de este mecanismo de persistencia, pero se logr&oacute; aislar del problema la complejidad, carga del servidor e ineficiencia. Al igual que toda la especificaci&oacute;n de EJB3, la discusi&oacute;n ahora radica si las aplicaciones deben delegar la mayor cantidad de cosas posibles al contendor o no. M&aacute;s precisamente y hablando de productos concretos, hoy por hoy el t&oacute;pico es EJB3 o Spring: aplicaciones manejadas por el contendor, o aplicaciones con su propio contenedor incluido.<br>
      <br>
  En nuestro caso, hemos desarrollado muchos tipos de aplicaciones para entornos muy variados. Este tipo de especificaciones afectan a aquellas en las que se trabajen con grandes vol&uacute;menes de datos (la mayor&iacute;a de nuestro caso) o con muchos accesos concurrentes. Para este &uacute;ltimo caso es sabido que los EJB (Entitys) siempre fueron una buena opci&oacute;n, que lamentablemente complicaba todo el resto, por lo que casi no se utilizaba.<br>
      <br>
    En pruebas realizadas en el control del acceso concurrente a objetos persistentes, m&eacute;todos de lockeo o control transaccional, los resultados son excelentes, lo cual no es novedad ya que en versiones anteriores estas funciones eras excelentes tambi&eacute;n.<br>
      <br>
     En pruebas realizadas a la nueva especificaci&oacute;n con grandes vol&uacute;menes de datos se lograron muy buenos resultados, similares a los logrados por las aplicaciones actuales implementadas con Hibernate plano. Se ejecutan procesos que trabajan sobre aproximadamente 1.5 millones de objetos en memoria (el grafo completo), la aplicaci&oacute;n anterior utilizaba 3 niveles de cache (distribuidos en un cluster de 2 nodos), para poder soportar tantos objetos en la misma &ldquo;session&rdquo; y en la misma transacci&oacute;n. Con la nueva API de EJB3, la consulta puede realizarse sin ninguna configuraci&oacute;n adicional, ya que el ciclo de vida de todos los objetos lo maneja el contenedor (con m&eacute;todos de caches y pasivation adicionales a los del framework elegido). Esto, guste o no, tiene muchas ventajas&hellip; Lamentablemente tambi&eacute;n tiene muchas desventajas en las que principalmente se encuentra la &ldquo;contra&rdquo; de la industria y de los programadores a utilizar EJB, miedo que poco a poco se va perdiendo con la mejora constante de las especificaciones.</p>
      </td>
    <td></td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td width="386">&nbsp;</td>
    <td></td>
  </tr>
  <tr>
    <td colspan="2" valign="top"><div align="left">
            <p>&nbsp;</p>
            <p><a href="../feed.xml" target="_blank">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img border=0 src="../imagenes/rss.png"></a></p>
          </div></td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
    <td></td>
  </tr>
  <tr>
    <td colspan="4" valign="top" class="menu_pie"><a href="about_us.htm" target="_self"> sobre nosotros</a> <span class="secciones">| <a href="research.htm" target="_self">investigaci&oacute;n</a> |</span> <a href="publications.htm" target="_self">publicaciones</a> <span class="secciones">|</span> <a href="technology.htm" target="_self">transferencia de t.</a> <span class="secciones">|</span> <a href="capabilities.htm" target="_self">capacidades</a> </td>
  </tr>
  <tr>
    <td colspan="6" valign="bottom" nowrap><img src="../imagenes/barra_down.gif" width="830" height="43" border="0" usemap="#Map"></td>
  </tr>
</table>
<map name="Map">
  <area shape="rect" coords="609,-31,743,22" href="http://www.amplioespectro.com" target="_blank">
</map>
</body>
</html>

<!-- Localized -->