<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Lifia</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="shortcut icon" href="../../imagenes/lifiaicon.ico" >
<style type="text/css">
<!--
@import url("../estilos_lifia.css");
body {
	background-color: #bec2d1;
	margin-left: 0px;
	margin-top: 5px;
	margin-right: 0px;
	margin-bottom: 0px;
	background-image: url();
}
a:link {
	color: #255282;
	text-decoration: none;
}
a:visited {
	text-decoration: none;
	color: #255282;
}
a:hover {
	text-decoration: none;
	color: #FF9933;
}
a:active {
	text-decoration: none;
	color: #FF9933;
}
.Estilo4 {color: #666666}
.Estilo8 {color: #1EA173}
.Estilo9 {color: #333399}

.centro{FONT-SIZE: 13px; COLOR: #666666; font-weight:bold;FONT-FAMILY: "Trebuchet MS", Verdana;
text-align:center;}
.linkTexto {
		COLOR: #0033CC; 	text-decoration:underline;
		font-weight:bold;}
-->
</style>
</head>

<body>
<script type="text/javascript" src="wz_tooltip.js"></script>
<table width="830" border="0" align="center" cellpadding="0" cellspacing="0" background="../imagenes/line_830.gif">
  <!--DWLayoutTable-->
  <tr>
    <td width="30" rowspan="8" valign="top"><img src="../imagenes/spacer_izq2.gif" width="30" height="615"></td>
    <td colspan="4" valign="top"><table width="780" height="114" border="0" cellpadding="0" cellspacing="0">
        <!--DWLayoutTable-->
        <tr>
          <td width="780" height="170" valign="top"><img src="../imagenes/top_difusion.gif" width="780" height="172" border="0" usemap="#Map"></td>
        </tr>
    </table></td>
  <td width="20" rowspan="8" valign="top"><img src="../imagenes/spacer_der2.gif" width="20" height="485"></td>
  </tr>
  <tr>
    <td width="247" rowspan="5" valign="top"><table width="247" border="0" cellpadding="0" cellspacing="0">
        <!--DWLayoutTable-->
        <tr>
          <td height="19" colspan="3" valign="top"><img src="../imagenes/spacer_vert_19.gif" width="10" height="19"></td>
        </tr>
        <tr>
          <td width="41" rowspan="7" valign="top"><!--DWLayoutEmptyCell-->&nbsp;</td>
          <td height="19" colspan="2" valign="top" nowrap class="menu_izq"><a href="../index.htm" target="_self">Bienvenida</a></td>
        </tr>
        <tr>
          <td height="19" colspan="2" valign="top" nowrap class="menu_izq"><a href="../about_us.htm" target="_self">Sobre nosotros</a> </td>
        </tr>
        <tr>
          <td height="19" colspan="2" valign="top" nowrap class="menu_izq"><a href="../research.htm">Investigaci&oacute;n</a> </td>
        </tr>
        <tr>
          <td height="19" colspan="2" valign="top" nowrap><span class="menu_izq"> <a href="../publications.htm" target="_self">Publicaciones </a></span> &#13;</td>
        </tr>
        <tr>
          <td height="19" colspan="2" valign="top" nowrap class="menu_izq"><a href="../technology.htm" target="_self">Transferencia de tec. &amp; servicios </a>&#13;</td>
        </tr>
        <tr>
          <td height="19" colspan="2" valign="top" class="menu_izq"><span class="menu_izq Estilo8"> <a href="../capabilities.htm">Capacidades &#13;</a><strong> <a href="capabilities.htm">&#13;&#13;</a></strong></span> &#13;</td>
        </tr>
        <tr>
          <td height="19" colspan="2" valign="top"><a href="../difusion.htm" class="menu_izq"><strong>Difusi&oacute;n</strong></a></td>
        </tr>
        <tr>
          <td height="57">&nbsp;</td>
          <td width="84">&nbsp;</td>
          <td width="122">&nbsp;</td>
        </tr>
        <tr>
          <td height="84" colspan="3" valign="top"><img src="../imagenes/spacer_vert_84.gif" width="10" height="84"></td>
        </tr>
        <tr>
          <td height="16" colspan="2" valign="top"><div align="center" class="menu_negrita Estilo4"><a href="../sitemap.htm" target="_self">mapa del sitio</a> </div></td>
              <td rowspan="5" valign="top"><!--DWLayoutEmptyCell-->&nbsp;</td>
        </tr>
        <tr>
          <td height="16" colspan="2" valign="top"><div align="center" class="menu_negrita"><a href="../staff.htm" target="_self">staff</a></div></td>
        </tr>
        <tr>
          <td height="16" colspan="2" valign="top"><div align="center" class="menu_negrita Estilo4"><a href="../contact.htm" target="_self">contacto</a></div></td>
        </tr>
        <tr>
          <td height="16" colspan="2" valign="top"><div align="center" class="menu_negrita Estilo4"><a href="../../en/index.htm" target="_self">english version</a> </div></td>
        </tr>
        <tr>
          <td height="16"></td>
          <td></td>
        </tr>
		        <tr>
		          <td>&nbsp;</td>
                  <td>&nbsp;</td>
                  <td>&nbsp;</td>
        </tr>
		
                </table></td>
    <td width="40"></td>
    <td valign="top"><!--DWLayoutEmptyCell-->&nbsp;</td>
        <td width="107"></td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td valign="top" class="titulo_principal_cap Estilo9">Herramienta de Tasaci&oacute;n de Llamadas Telef&oacute;nicas de Interconexi&oacute;n </td>
    <td></td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td valign="top" class="titulo_secundario"><span class="contenidos_titulos">(por Federico Tello Gentile) </span>  - 24/Abril/2008 - <a href="20080424.htm"><strong>Permalink</strong></a> </td>
    <td></td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td valign="top" class="parrafo_normal">
             <p>&nbsp; &nbsp; Cuando cualquiera de nosotros hace una llamada telef&oacute;nica pueden intervenir una o varias empresas de telefon&iacute;a para llevarla a cabo. En el caso de las llamadas internacionales es evidente que ninguna empresa puede tener conectados a todos los tel&eacute;fonos del mundo, de manera que tendr&aacute; que pasarle la llamada a alguna otra que s&iacute; est&eacute; conectada con el destinatario. Pero a&uacute;n, dentro de un mismo pa&iacute;s y en la misma ciudad, puede haber llamadas entre empresas diferentes (por ejemplo de un m&oacute;vil de Personal a un tel&eacute;fono fijo de Telef&oacute;nica). La operaci&oacute;n que realiza una empresa de telefon&iacute;a cuando le pasa una llamada a otra se denomina interconexi&oacute;n. Toda operaci&oacute;n de ese tipo implica una transacci&oacute;n comercial, ya que las empresas cobran por el uso de la red.</p>
             <p>&nbsp; &nbsp; RACING (nombre interno que se le dio al sistema de tasaci&oacute;n de llamadas de Interconexi&oacute;n que es un acr&oacute;nimo RAting Carriers Interconected Next Generation) es un sistema que a partir de la informaci&oacute;n de descripci&oacute;n de una llamada desde el punto de vista de un operador, determina el monto que corresponde cobrar por el uso de la red propia o pagar por el de la red ajena. Eso se denomina tasaci&oacute;n de la llamada.</p>
             <p>&nbsp; &nbsp; La operatoria b&aacute;sica es sencilla:<br>
               &nbsp; &nbsp; 1.Leer una llamada<br>
               &nbsp; &nbsp; 2.Tasarla<br>
               &nbsp; &nbsp; 3.Escribir el resultado</p>
             <p>&nbsp; &nbsp;Hay que tener en cuenta que cada llamada que ingresa a la red del operador implica dos tasaciones, una para calcular el monto a cobrar por el uso de la red propia y otra para pagarle a otro operador por el uso de la red ajena. Son tasaciones independientes porque en algunos casos una de las dos no es necesaria, como en el caso de las llamadas se originan o terminan en la red propia. Operando para la red de Globalcrossing, RACING tiene que tasar entre un promedio mensual de 33 millones de llamadas, pero como es un operador el que programa cu&aacute;ndo se ejecutan las tasaciones, muchas llamadas son tasadas m&aacute;s de una vez, por ejemplo porque no estaban actualizadas las tarifas. </p>
             <p>&nbsp; &nbsp; Para tasar una llamada, RACING tiene que leer de una base de datos una cantidad enorme de datos (los registros que describen las llamadas, las tarifas nacionales, las tarifas internacionales, los operadores, las localidades, informaci&oacute;n de la red de telefon&iacute;a como rutas y puntos de tarifaci&oacute;n, informaci&oacute;n de clientes, impuestos, feriados, etc.) y como se parti&oacute; de un sistema administrativo preexistente algunas de las las consultas son complejas por lo que es fundamental que cada dato se lea una &uacute;nica vez. </p>
             <p>&nbsp; &nbsp; Para simplificar el acceso a los datos y su posterior almacenamiento, en memoria se dise&ntilde;&oacute; un esquema de lazy loading. La primera vez que RACING necesita una tarifa o cualquier otro dato, &eacute;ste es le&iacute;do de la base de datos y permanece en una memoria cach&eacute; mientras no se la vac&iacute;e expl&iacute;citamente. Hoy RACING tiene en su memoria cach&eacute; 21 tipos distintos de objetos que se leen de la base.</p>
             <p>&nbsp; &nbsp; En las primeras versiones del tasador, procesar todo un mes de tr&aacute;fico insum&iacute;a aproximadamente 24 horas de procesamiento. Si bien no hubo un requerimiento espec&iacute;fico en cuanto a tiempos m&aacute;ximos de procesamiento, se busc&oacute; minimizarlos. Uno de los primeros an&aacute;lisis que se realizaron fueron usando una herramienta de profiling que viene integrada al IDE NetBeans 6.0 (<a href="http://www.netbeans.org/features/java/profiler.html">http://www.netbeans.org/features/java/profiler.html</a>). Con ella se observ&oacute; que cerca del 99% del tiempo de procesamiento correspond&iacute;a a leer datos de la base lo que puso el foco en la cach&eacute;.             </p>
      <p>&nbsp; &nbsp; La efectividad de toda cach&eacute; est&aacute; dada por la tasa de aciertos. Incorporando un registro de aciertos y fallos de cach&eacute; a RACING pudimos ver que todas las caches menos una, ten&iacute;an una tasa de aciertos superior al 99,9%. La cach&eacute; menos eficaz ten&iacute;a una tasa de aciertos superior al 97%, pero ese 3% representaba cerca de 6.000 consultas a la base de datos por cada d&iacute;a de procesamiento (180.000 consultas para tasar un mes). Si bien un 97% de aciertos en una cach&eacute; es un ahorro enorme (5.820.000 consultas por cada mes) la inmensa cantidad de consultas que implicaba ese 3% justificaba analizar alternativas.</p>
             <p><strong>&nbsp; &nbsp; La Primera Mejora</strong></p>
      <p>&nbsp; &nbsp;Lo primero que se observ&oacute; fue que muchas de las consultas no encontraban ning&uacute;n objeto en la base que correspondiera al criterio deseado y no hab&iacute;a qu&eacute; poner en la cach&eacute;, lo que implicaba que la pr&oacute;xima vez que se usara el mismo criterio ser&iacute;a necesario volver a realizar la consulta. Es as&iacute; que se decidi&oacute; almacenar en la cach&eacute; los objetos no encontrados mediante un patr&oacute;n similar a NullObject..</p>
             <p>&nbsp; &nbsp; Con esa mejora, la cantidad de consultas cay&oacute; significativamente logrando que el n&uacute;mero consultas realizadas fuera el mismo que el de objetos almacenados en la cach&eacute;. </p>
             <p><strong>&nbsp; &nbsp; Otra Mejora</strong></p>
      <p>&nbsp; &nbsp;Si bien era una mejora considerable se observ&oacute; que para algunos tipos de objetos, al terminar el procesamiento, se hab&iacute;an le&iacute;do y almacenado en la cach&eacute; uno por uno, casi todos los objetos existentes en la base, adem&aacute;s de una cantidad importante de objetos inexistentes. No ten&iacute;a mucho sentido leer uno por uno los objetos si a la larga se iban a leer todos. Se opt&oacute; por no usar lazy loading en esos casos, sino leerlos todos en masa cuando se necesitara obtener el primero. Al tener le&iacute;dos todos los objetos de entrada, no es necesario almacenar en la cach&eacute; los no existentes: si no est&aacute; en la cach&eacute; no hay que ir a leerlo a ninguna parte, se sabe que no existe.</p>
             <p>&nbsp; &nbsp; A partir de ese cambio los tiempos de lectura pasaron a un segundo plano y la herramienta de profiling empez&oacute; a mostrar otras operaciones que estaban insumiendo tiempos considerables.</p>
             <p><strong>&nbsp; &nbsp; Las B&uacute;squedas en HashMap</strong></p>
      <p>&nbsp; &nbsp; La cach&eacute; en memoria se implementa con un HashMap en donde la clave es un objeto creado espec&iacute;ficamente para identificar al objeto almacenado. Cada tipo de objeto tiene su tipo clave, aunque todas implementan una misma interfaz. El profiler mostr&oacute; que para tasar 1.000 llamadas se estaba invocando 8.000.000 de veces el m&eacute;todo equals de la clave de la tarifa. Ese tipo de comportamiento es t&iacute;pico de las b&uacute;squedas lineales en colecciones, donde se recorre la colecci&oacute;n y por cada elemento se pregunta si es igual al buscado, pero en este caso la colecci&oacute;n era un HashMap que supuestamente realiza la b&uacute;squeda con muchas menos comparaciones dispersando los objetos mediante su hashCode. Evidentemente la implementaci&oacute;n del m&eacute;todo hashCode en cuesti&oacute;n, no estaba distribuyendo los objetos en forma adecuada y estaban todos cayendo en el mismo rango. Corregido ese m&eacute;todo absolutamente cr&iacute;tico para que el HashMap y el HashSet sean realmente eficientes, la cantidad de invocaciones al equals baj&oacute; a niveles &iacute;nfimos.</p>
             <p><strong>&nbsp; &nbsp; No Instanciar Dos Veces el Mismo Objeto</strong></p>
      <p>&nbsp; &nbsp;Todas las tarifas se manejan como BigDecimal para poder realizar operaciones con aritm&eacute;tica decimal precisa. En la operaci&oacute;n del c&aacute;lculo del monto, se debe multiplicar la tarifa por la duraci&oacute;n de la llamada (por ejemplo 56 segundos) por lo que previamente hay que crear un BigDecimal a partir del entero que representa esa duraci&oacute;n. Con 3 millones de llamadas por d&iacute;a, ten&iacute;amos 3 millones de invocaciones del tipo new BigDecimal(int). Si bien esa operaci&oacute;n no es muy costosa, el profiler nos mostraba que era el tercer objeto m&aacute;s instanciado (despu&eacute;s de byte[] y char[]) de todo RACING. Se estaban creando uno por cada llamada, pero de forma muy particular. El 90% de esos estaban entre los valores 1 y 200 que son las duraciones m&aacute;s comunes de las llamadas; las instancias de BigDecimal son inmutables, es decir que no se corre riesgo alguno si se las reutiliza. Una vez tasada la llamada, la instancia de BigDecimal ya no era m&aacute;s referenciada y quedaba a disposici&oacute;n por el garbage collector y por &uacute;ltimo todas las instanciaciones se realizaban en el mismo lugar. </p>
             <p>&nbsp; &nbsp; Bajo esas condiciones fue conveniente implementar un mecanismo de reutilizaci&oacute;n de BigDecimals. Se tienen ya instanciados en forma est&aacute;tica los primeros 200 BigDecimals y cuando se necesita uno para representar una duraci&oacute;n en ese rango se lo obtiene de entre ellos. Para otras duraciones se crea la instancia como era anteriormente.</p>
             <p>&nbsp; &nbsp; Adem&aacute;s de eliminar el 90% del tiempo que llevaba crearlos, se generan menos objetos que el garbage collector debe liberar reduciendo la frecuencia con la que era invocado.</p>
             <p><strong>&nbsp; &nbsp; Achicando el Working Set </strong></p>
      <p>&nbsp; &nbsp; Tambi&eacute;n se observ&oacute; que cada objeto que modelaba una llamada ten&iacute;a varias referencias a Strings que describ&iacute;an sus caracter&iacute;sticas, como por ejemplo, el servicio (FIJO, MOVIL, RURAL, etc.) o el destino. Esos valores de la llamada se obtienen de la base da datos y por lo tanto por m&aacute;s que miles de objetos referencian el String &ldquo;FIJO&rdquo;, eran instancias distintas. El impacto de esta duplicaci&oacute;n de valores es enorme por la cantidad de llamadas que se instancian. Si bien no se puede evitar que esos Strings le&iacute;dos de la base de datos sean creados (los crea el driver JDBC a partir de los bytes que lee), s&iacute; podemos reemplazarlos a todos por una &uacute;nica instancia luego de leerlos, de manera de achicar el conjunto de objetos referenciados dr&aacute;sticamente. El garbage collector de la JVM de SUN est&aacute; optimizado para liberar los objetos que viven poco tiempo sin mucho impacto en la performance general.</p>
             <p><strong>&nbsp; &nbsp; Conclusi&oacute;n </strong></p>
      <p>&nbsp; &nbsp; La versi&oacute;n actual de RACING s&oacute;lo dedica un entre un 3% y un 10% del tiempo total a tasar ya que una vez que tas&oacute; unas pocas llamadas tiene en memoria todos los datos que necesita para tasar todas las dem&aacute;s. A pesar de ello, s&oacute;lo requiere alrededor de 256 MB de memoria heap para operar habitualmente. El resto del tiempo est&aacute; determinado por lo que insume leer las llamadas y escribir los resultados, &aacute;reas en las que tambi&eacute;n se trabaj&oacute; para aumentar la eficiencia. Se estima que se puede procesar todo un mes en unas 4 horas. </p>
    </td>
<td></td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td width="386"></td>
    <td></td>
  </tr>
  <tr>
    <td colspan="2" valign="top"><div align="left">
            <p>&nbsp;</p>
            <p><a href="../feed.xml" target="_blank">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img border=0 src="../imagenes/rss.png"></a></p>
          </div></td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
    <td></td>
  </tr>
  <tr>
    <td colspan="4" valign="top" class="menu_pie"><a href="about_us.htm" target="_self"> sobre nosotros</a> <span class="secciones">| <a href="research.htm" target="_self">investigaci&oacute;n</a> |</span> <a href="publications.htm" target="_self">publicaciones</a> <span class="secciones">|</span> <a href="technology.htm" target="_self">transferencia de t.</a> <span class="secciones">|</span> <a href="capabilities.htm" target="_self">capacidades</a> </td>
  </tr>
  <tr>
    <td colspan="6" valign="bottom" nowrap><img src="../imagenes/barra_down.gif" width="830" height="43" border="0" usemap="#Map"></td>
  </tr>
</table>
<map name="Map">
  <area shape="rect" coords="609,-31,743,22" href="http://www.amplioespectro.com" target="_blank">
</map>
</body>
</html>

<!-- Localized -->